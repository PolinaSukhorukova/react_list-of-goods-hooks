{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","isResetButton","Boolean","visibleGoods","goods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","Error","reverse","getReorderedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAgBC,QAAQH,IAAaP,EAASM,MAAQF,GACtDO,EAlCD,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,SAAUH,EACZ,EADYA,WAENO,EAAY,YAAOC,GAsBzB,OApBAD,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAQR,GACN,KAAKP,EAASgB,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKf,EAASkB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,KAAKnB,EAASM,KACZ,OAAO,EAET,QACE,MAAM,IAAIc,MAAM,uBAIlBhB,GACFO,EAAaU,UAGRV,EAQcW,CACnBrB,EACA,CAAEM,WAAUH,eAGd,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYlB,IAAaP,EAASgB,WAEtCU,QAAS,kBAAMlB,EAAYR,EAASgB,WANtC,iCAWA,wBACEQ,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYlB,IAAaP,EAASkB,SAEtCQ,QAAS,kBAAMlB,EAAYR,EAASkB,SANtC,4BAWA,wBACEM,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAarB,IAEjBsB,QAAS,kBAAMrB,GAAeD,IANhC,qBAWEK,GACA,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPlB,EAAYR,EAASM,MACrBD,GAAc,IALlB,sBAaJ,6BACE,6BACGM,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cCtHpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8615e8e5.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      case SortType.NONE:\n        return 0;\n\n      default:\n        throw new Error('Wrong sort type');\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const isResetButton = Boolean(sortType !== SortType.NONE || isReversed);\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        { isResetButton && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortType(SortType.NONE);\n              setIsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}